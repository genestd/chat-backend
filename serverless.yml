# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: chat-backend
custom:
  siteName: chat.genest.io
  aliasDNSName: s3-website-us-west-2.amazonaws.com
  aliasHostedZoneId: ZFR0B4V0YBT2M
package:
  individually: true

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs8.10

# you can overwrite defaults here
  stage: ${opt:stage, 'dev'}
  region: us-west-2

  package:
    exclude:
      - ./client/**
# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:BatchGetItem
          - dynamodb:Query
          - dynamodb:Scan
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:DeleteItem
          - dynamodb:BatchWriteItem
        Resource:
          - arn:aws:dynamodb:*:*:table/${opt:stage}Users
          - arn:aws:dynamodb:*:*:table/${opt:stage}Conversations
          - arn:aws:dynamodb:*:*:table/${opt:stage}Messages
#
resources:
  Resources:
    # myDNS:
    #   Type: AWS::Route53::RecordSetGroup
    #   Properties:
    #     HostedZoneId: Z1I65Z49YINY2I
    #     RecordSets:
    #     - Name: ${opt:stage}.bam.zone.
    #       Type: A
    #       AliasTarget:
    #         HostedZoneId: Z2FDTNDATAQYW2
    #         DNSName: d2uz75blt1c7oi.cloudfront.net.
    #AssetBucket:
      # Type: "AWS::S3::Bucket"
      # Properties:
      #   BucketName: ${opt:stage}-sharedAssets.bam.zone
      #   CorsConfiguration:
      #     CorsRules:
      #       -
      #         AllowedHeaders:
      #         - '*'
      #         AllowedMethods:
      #         - GET
      #         - PUT
      #         - POST
      #         AllowedOrigins:
      #         - '*'
      #         MaxAge: 3000
      #         ExposedHeaders:
      #           - ETag
    StaticSite:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: PublicRead
        BucketName: ${self:custom.siteName}
        WebsiteConfiguration:
          IndexDocument: index.html
    StaticSiteS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: StaticSite
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
              - s3:GetObject
              Resource:
                Fn::Join: [
                  "", [
                    "arn:aws:s3:::",
                    {
                      "Ref": "StaticSite"
                    },
                    "/*"
                  ]
                ]
    DnsRecord:
      Type: "AWS::Route53::RecordSet"
      Properties:
        AliasTarget:
          DNSName: ${self:custom.aliasDNSName}
          HostedZoneId: ${self:custom.aliasHostedZoneId}
        HostedZoneName: ${self:custom.siteName}.
        Name:
          Ref: StaticSite
        Type: 'A'
    ChatCDN:
      Type: "AWS::CloudFront::Distribution"
      Properties:
        DistributionConfig:
          ViewerCertificate:
            AcmCertificateArn: ${file(./config/config.${self:provider.stage}.json):certificateArn}
            SslSupportMethod: sni-only
          Enabled: true
          HttpVersion: http2
          IPV6Enabled: true
          PriceClass: PriceClass_100
          Aliases:
            - ${opt:stage}-viewer.bam.zone
          CustomErrorResponses:
            - ErrorCode: 403
              ErrorCachingMinTTL: 300
              ResponseCode: 200
              ResponsePagePath: /index.html
            - ErrorCode: 400
              ErrorCachingMinTTL: 0
            - ErrorCode: 404
              ErrorCachingMinTTL: 0
            - ErrorCode: 502
              ErrorCachingMinTTL: 0
            - ErrorCode: 503
              ErrorCachingMinTTL: 0
          DefaultRootObject: index.html
          Origins:
            - DomainName: ${self:custom.siteName}.s3.amazonaws.com
              Id: ${opt:stage}-viewer.bam.zone
              S3OriginConfig:
                OriginAccessIdentity:
                  Ref: AWS::NoValue
          DefaultCacheBehavior:
            ViewerProtocolPolicy: redirect-to-https
            TargetOriginId: ${self:custom.siteName}.s3.amazonaws.com
            AllowedMethods:
              - GET
              - HEAD
            Compress: true
            DefaultTTL: 30
            MinTTL: 10
            ForwardedValues:
              QueryString: false
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${opt:stage}Users
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: username
           KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 2
    ConversationsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${opt:stage}Conversations
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: messageId
            AttributeType: S
        KeySchema:
          - AttributeName: id
           KeyType: HASH
          - AttributeName: messageId
           KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 2
    MessagesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${opt:stage}Messages
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
           KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 2

  # Outputs:
  #   Chat:
  #     Description: The CloudFront distribution
  #     Value: ChatCDN
